<?xml version="1.0"?>

<holism>
	<parameter name='N' type='index' comment='number of processes in the system' />
	<parameter name='A' assumption='A == 3.0' type='real' comment='smaller constant' />
	<parameter name='B' assumption='B == 19.0' type='real' comment='larger constant' />
	
	<variable name='g' initially='g == 0' type='index' update_type='Discrete' comment='lock' />
	
	<assumption equn='A &gt; 0.0 and B &gt; 0.0 and A &lt; B' comment='A *stictly less than* B for mutual exclusion; invariant generation requires chosen values for A and B' />
	
	<assumption equn='N &gt;= 2' comment='' />

	<automaton name='fischer_umeno_five_state'>
		<variable name='x[i]' initially='x[i] == 0.0' type='nnreal' update_type='Continuous' />
		<variable name='last[i]' initially='last[i] == A' type='nnreal' update_type='Discrete' comment='' />
		<variable name='first[i]' initially='first[i] == 0.0' type='nnreal' update_type='Discrete' comment='' />
		
<!--		<initial equn='(forall i (x[i] == 0.0 and last[i] == A and first[i] == 0.0)) and g = 0' />
-->

<!--		<mode id='0' name='rem' initial='True'>
			<dai variable='x[i]' equn='x[i]_dot = 1.0'/>
		</mode>
-->

		<mode id='0' name='test' initial='True'>
			<dai variable='x[i]' equn='x[i]_dot = 1.0'/>
		</mode>
		
		<mode id='1' name='set' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot = 1.0'/>
			<stop equn='x[i] == last[i]' />
			<invariant equn='x[i] &lt;= last[i]' />
		</mode>
		
		<mode id='2' name='check' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot = 1.0'/>
		</mode>
		
		<mode id='3' name='crit' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot = 1.0'/>
		</mode>
		<!--
		<transition source='rem' destination='test'>
		</transition>
		-->

		<transition source='test' destination='test'>
			<guard equn='g != 0' />
		</transition>

		<transition source='test' destination='set'>
			<guard equn='g == 0' />
			<action equn='last[i]&apos; = x[i] + A'/>
		</transition>
		
		<transition source='set' destination='check'>
			<action equn='g&apos; = i and first[i]&apos; = x[i] + B'/>
		</transition>
		
		<transition source='check' destination='test'>
			<guard equn='g != i and x[i] &gt;= first[i]' />
			<action equn='first[i]&apos; = 0.0'/>
		</transition>
		
		<transition source='check' destination='crit'>
			<guard equn='g == i and x[i] &gt;= first[i]' />
		</transition>
		
		<!-- <transition source='crit' destination='rem'> -->
		<transition source='crit' destination='test'>
			<action equn='g&apos; = 0'/>
		</transition>
	</automaton>


<!--	<property equn='forall i j ((((q[i] == rem) or (q[i] == test) or (q[i] == set) or (q[i] == check) or (q[i] == crit)) and ((q[j] == rem) or (q[j] == test) or (q[j] == set) or (q[j] == check) or (q[j] == crit))) implies x[i] == x[j])' type='safety' />

	<property equn='forall i j (x[i] == x[j])' type='safety' />
	
	
	
	<property equn='forall i j (x[i] != x[j])' type='safety' />

	<property equn='forall i (q[i] == rem)' type='safety' />


	<property equn='forall i (q[i] == test)' type='safety' />
	<property equn='forall i (q[i] == set)' type='safety' />
	<property equn='forall i (q[i] == check)' type='safety' />
	<property equn='forall i (q[i] == crit)' type='safety' />
	<property equn='forall i (q[i] != rem)' type='safety' />

	<property equn='forall i (q[i] != test)' type='safety' />
	<property equn='forall i (q[i] != set)' type='safety' />
	<property equn='forall i (q[i] != check)' type='safety' />
	<property equn='forall i (q[i] != crit)' type='safety' />
-->
	<property equn='forall i ((q[i] == set) implies (last[i] &lt;= x[i] + A))' type='safety' />
	<property equn='forall i ((q[i] == set) implies (x[i] &lt;= last[i]))' type='safety' />
	<property equn='forall i j ((q[i] == check and g == i and q[j] == set) implies (first[i] &gt; last[j]))' type='safety' />
	<property equn='forall i j ((q[i] == crit) implies (g == i and q[j] != set))' type='safety' />

	

	<property equn='forall i j (x[i] == x[j])' type='safety' />
	<property equn='forall i j ((i != j) implies (q[i] != crit or q[j] != crit))' type='safety' />
	

</holism>
