<?xml version="1.0"?>

<holism>
	<parameter name='N' type='index' comment='number of aircraft in the system' />
	<parameter name='L_B' type='real' comment='base zone length' />
	<parameter name='L_S' type='real' comment='safety spacing' />
	<parameter name='v_min' type='real' comment='minimum velocity' />
	<parameter name='v_max' type='real' comment='maximum velocity' />
	
	<parameter name='g' type='index' update_type='Discrete' comment='global head pointer variable' />

	<assumption equn='L_S &gt; 0.0' comment='the safety spacing is positive' />
	<assumption equn='L_B &gt; 0.0' comment='the base zone length is positive'/>
	<assumption equn='L_B &gt; 100.0*L_S' comment='the base length is at least as large as the safety spacing'/>
	<assumption equn='N == 4' comment='there are at least 2 aircraft in the system, but no more than 10' />
	<assumption equn='v_min == 1.0' />
	<assumption equn='v_max == 2.0' />

	<automaton name='default_automaton'>
		<variable name='x[i]' type='nnreal' update_type='Continuous' />
		<variable name='p[i]' type='index' update_type='Discrete' />
		
		<initial equn='(forall i (x[i] == 0.0 and p[i] == 0)) and g == 0' />

		<mode id='0' name='Fly' initial='True'>
			<dai variable='x[i]' equn='x[i]_dot = 0.0'/>
		</mode>

		<mode id='1' name='Holding' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot = 0.0'/>
		</mode>
		
		<mode id='2' name='Base' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot &gt;= v_min and x[i]_dot &lt;= v_max'/>
			<stop equn='x[i] &gt;= L_B'/>
			<invariant equn='x[i] &lt;= L_B'/>
		</mode>
		
		<mode id='3' name='Runway' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot = 0.0'/>
		</mode>
		
		<mode id='4' name='Land' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot = 0.0'/>
		</mode>

		<transition source='Fly' destination='Holding'>
			<action equn='p[i]&apos; = g and g&apos; = i'/>
		</transition>

		<transition source='Holding' destination='Base'>
			<guard equn='((p[i] = 0 or (p[i] &gt; 0 and (q[ p[i] ] = Base or q[ p[i] ] = Runway)))  implies x[ p[i] ] &gt;= 0.0)'/>
			<action equn='x[i]&apos; = 0.0'/>
		</transition>
		
		<transition source='Base' destination='Runway'>
			<guard equn='x[i] &gt;= L_B'/>
			<action equn='x[i]&apos; = 0.0'/>
		</transition>
		
		<transition source='Runway' destination='Holding'>
			<action equn='x[i]&apos; = 0.0 and p[i]&apos; = g and g&apos; = i'/>
		</transition>
		
		<transition source='Runway' destination='Land'>
			<action equn='p[i]&apos; = g'/>
		</transition>
	</automaton>
	
	<property equn='forall i j ((x[i] >= x[j]) implies (x[i] - x[j] &gt;= L_S))' type='safety' comment='Safety: there is always at least S distance between any two distinct aircraft.' />
	
	
	<property equn='forall i (x[i] &gt;= 0.0)' type='safety' comment='' />
	
	<property equn='forall i j ((q[i] == Base and q[j] == Base) imply (x[i] - x[j] &gt;= L_S))' type='safety' comment='Safety: there is always at least S distance between any two distinct aircraft.' />
	


	<property equn='forall i (q[i] == Fly or q[i] == Holding or q[i] == Base or q[i] == Runway or q[i] == Land)' type='safety' comment='Invariant' />

	<property equn='forall i j ((q[i] == Fly or q[i] == Holding or q[i] == Base or q[i] == Runway or q[i] == Land) and (q[j] == Fly or q[j] == Holding or q[j] == Base or q[j] == Runway or q[j] == Land))' type='safety' comment='Invariant' />
	
	
</holism>
