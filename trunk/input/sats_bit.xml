<?xml version="1.0"?>

<holism>
	<parameter name='N' type='index' comment='number of aircraft in the system' />
	<parameter name='LB' assumption='LB == (15.0 + 10.0 + 13.0)' type='real' comment='base zone length' />
	<parameter name='LS' assumption='LS == 7.0' type='real' comment='safety spacing' />
	
	<parameter name='a' assumption='a == 90.0' type='real' comment='v_min lower bound on rectangular dynamics' />
	<parameter name='b' assumption='b == 120.0' type='real' comment='v_max upper bound on rectangular dynamics' />

	<variable name='last'  type='index' update_type='discrete' comment='global tail pointer variable, where tail is defined as the plane that is last to land' />

	<assumption equn='LGUARD == LS + (b - a) * ((LB - LS) / a)' />
	<assumption equn='N &gt;= 2' comment='there are at least 2 aircraft in the system' />

	<automaton name='sats'>
		<variable name='x[i]' type='nnreal' update_type='Continuous' />
		<variable name='next[i]' type='index' update_type='Discrete' />
		
		<initial equn='(forall i (x[i] == 0.0 and next[i] == 0)) and last == 0' />

		<mode id='0' name='Fly' initial='True'>
			<dai variable='x[i]' equn='x[i]_dot = 0.0'/>
		</mode>

		<mode id='1' name='Holding' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot = 0.0'/>
		</mode>
		
		<mode id='2' name='Base' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot &gt;= a and x[i]_dot &lt;= b'/>
			<stop equn='x[i] &gt;= LB'/>
			<invariant equn='x[i] &lt;= LB'/>
		</mode>
		
		<mode id='3' name='Land' initial='False'>
			<dai variable='x[i]' equn='x[i]_dot = 0.0'/>
		</mode>

		<transition source='Fly' destination='Holding'>
			<guard equn='next[i] == 0' />
			<action equn='x[i]&apos; = 0.0 and next[i]&apos; = last and last&apos; = i'/>
		</transition>
		

		<transition source='Holding' destination='Base'>
			<guard equn='(next[i] == 0) or (next[i] != 0 and q[ next[i] ] == Base and x[ next[i] ] &gt;= (LGUARD * 1.0))'/>
			<action equn='x[i]&apos; = 0.0'/>
		</transition>

		<transition source='Base' destination='Holding'>
			<guard equn='x[i] &gt;= LB and next[i] == 0'/>
			<uguard equn='if (next[j] = i) then (next[j]&apos; = 0) else (next[j]&apos; = next[j])' />
			<action equn='x[i]&apos; = 0.0 and (if (last != i) then (next[i]&apos; = last) else (next[i]&apos; = 0)) and last&apos; = i'/>
		</transition>
		
		<transition source='Base' destination='Land'>
			<guard equn='x[i] &gt;= LB and next[i] == 0'/>
			<uguard equn='if (next[j] = i) then (next[j]&apos; = 0) else (next[j]&apos; = next[j])' />
			<action equn='x[i]&apos; = 0.0 and next[i]&apos; = 0 and (if (last == i) then (last&apos; = 0) else (last&apos; = last))'/>
		</transition>

	</automaton>
	
	<!-- manual strengthening proof -->
<!--
	<property equn='forall i ((q[i] == Base) implies (x[i] &lt;= LB))' type='safety' comment='' />
	<property equn='forall i ((x[i] &lt;= LB))' type='safety' comment='' />
	<property equn='forall i ((q[i] == Fly) implies (last != i))' type='safety' comment='key lemma 3: must hold to show key lemma 2' />
	<property equn='forall i j ((next[j] == i) implies (q[i] != Fly))' type='safety' comment='key lemma 2: must hold to show key lemma 1' />	
	<property equn='forall i j ((q[i] = Holding and next[j] = i) implies (q[j] = Holding))' type='safety' comment='key lemma 1: for showing safety (if this holds, safety holds)' />
	<property equn='forall i j ((q[i] == Base and q[j] == Base and next[j] == i) implies (x[i] &gt;= (LB - x[j]) / (a) * (b - a)))' type='safety' comment='inductive invariant of safety' />
-->
	
	<property equn='forall i j ((i != j and q[i] == Base and q[j] == Base and next[j] == i) implies (x[i] - x[j] &gt;= LS))' type='safety' comment='Safety: there is always at least S distance between any two distinct aircraft.' />

</holism>
